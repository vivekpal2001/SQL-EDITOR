version: '3.8'

services:
  # Next.js Application
  app:
    build: .
    container_name: sqleditor-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_USER=sqluser
      - MYSQL_PASSWORD=sqlpassword
      - MYSQL_DATABASE=sqleditor
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=sqlpassword
      - POSTGRES_DATABASE=sqleditor
    depends_on:
      - mysql
      - postgres
    networks:
      - app-network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: sqleditor-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: sqleditor
      MYSQL_USER: sqluser
      MYSQL_PASSWORD: sqlpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: sqleditor-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: sqleditor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sqlpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    networks:
      - app-network

volumes:
  mysql_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
